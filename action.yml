name: 'Guard Validate'
description: 'Validate templates using cfn-guard'
inputs:
  rules:
    description: 'Rules file or directory'
    required: true
  data:
    description: 'Data file or directory'
    required: true
  token:
    description: 'secrets.GITHUB_TOKEN'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: cfn-guard validate
      shell: bash
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/aws-cloudformation/cloudformation-guard/main/install-guard.sh | sh
        export PATH="$HOME/.guard/bin:$PATH"
        exit_code=0

        RULES="${{ inputs.rules }}"
        DATA="${{ inputs.data }}"

        if ! cfn-guard validate -r $RULES -d $DATA --output-format sarif  --show-summary none --structured > result.sarif; then
          exit_code=1
          cat result.sarif
        fi

        if ! cfn-guard validate -r $RULES -d $DATA --output-format junit  --show-summary none --structured > result.xml; then
          exit_code=1
          cat result.xml
        fi

        exit $exit_code
      continue-on-error: true
    - name: Publish Validate Report
      uses: mikepenz/action-junit-report@v4
      if: success() || failure()
      with:
        report_paths: '*.xml'
        check_annotations: false
        detailed_summary: true
        annotate_notice: true
        check_name: 'CFN Guard Validation Report'
    - name: Custom Reports
      uses: xportation/junit-coverage-report@main
      with:
        github-token: ${{ inputs.token }}
        junit-path: result.xml
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()    # run this step even if previous step failed
      with:
        name: Junit Tests            # Name of the check run which will be created
        path: result.xml    # Path to test results
        reporter: java-junit
        token: ${{ inputs.token }}
    - name: Post SARIF findings in the pull request
      if: github.event_name == 'pull_request'
      uses: sett-and-hive/sarif-to-comment-action@v2.0.1
      with:
        token: ${{ inputs.token }}
        repository: ${{ github.repository }}
        branch: ${{ github.head_ref }}
        pr-number: ${{ github.event.number }}
        sarif-file: result.sarif
        title: 'CFN Guard Validation Comments'
        dry-run: false