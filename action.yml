name: 'Guard Validate'
description: 'Validate templates using cfn-guard'
inputs:
  rules:
    description: 'Rules file or directory'
    required: true
  data:
    description: 'Data file or directory'
    required: true
  token:
    description: 'secrets.GITHUB_TOKEN'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: cfn-guard validate
      id: guard
      shell: bash
      run: |
        mkdir -p ~/.guard/dl
        mkdir -p ~/.guard/bin
        curl -L -o /tmp/guard.tar.gz https://github.com/aws-cloudformation/cloudformation-guard/releases/download/$VERSION/cfn-guard-v$VERSION:0:1-ubuntu-latest.tar.gz
        tar -C ~/.guard/dl -xzf /tmp/guard.tar.gz
        ln -sf ~/.guard/dl/cfn-guard-v$VERSION:0:1-ubuntu-latest/cfn-guard ~/.guard/bin && ls -l ~/.guard/bin
        export PATH="$HOME/.guard/bin:$PATH"

        EXIT_CODE=0

        RULES="${{ inputs.rules }}"
        DATA="${{ inputs.data }}"

        if ! cfn-guard validate -r $RULES -d $DATA --output-format sarif  --show-summary none --structured > result.sarif; then
          EXIT_CODE=1
          cat result.sarif
        fi

        if ! cfn-guard validate -r $RULES -d $DATA --output-format junit  --show-summary none --structured > result.xml; then
          EXIT_CODE=1
          cat result.xml
        fi

        exit $EXIT_CODE
      continue-on-error: true
      env:
        VERSION: ${{ github.event.inputs.version }}
    - name: Upload SARIF result
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: result.sarif
      continue-on-error: true
    - name: Publish Validate Report
      uses: mikepenz/action-junit-report@v4
      if: success() || failure()
      with:
        report_paths: '*.xml'
        check_annotations: false
        detailed_summary: true
        annotate_notice: true
        check_name: 'CFN Guard Validation Report'
