name: 'Guard Validate'
description: 'Validate templates using cfn-guard'
inputs:
  rules:
    description: 'Rules file or directory'
    required: true
  data:
    description: 'Data file or directory'
    required: true
  version:
    description: 'Guard CLI version'
    required: false
    default: '3.1.0'
runs:
  using: 'composite'
  steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Validate
      id: guard
      shell: bash
      run: |
        mkdir -p ~/.guard/dl
        mkdir -p ~/.guard/bin
        VERSION=${{ inputs.version }}
        curl -L -o /tmp/guard.tar.gz https://github.com/aws-cloudformation/cloudformation-guard/releases/download/$VERSION/cfn-guard-v${VERSION:0:1}-ubuntu-latest.tar.gz
        tar -C ~/.guard/dl -xzf /tmp/guard.tar.gz
        ln -sf ~/.guard/dl/cfn-guard-v${VERSION:0:1}-ubuntu-latest/cfn-guard ~/.guard/bin && ls -l ~/.guard/bin
        export PATH="$HOME/.guard/bin:$PATH"

        EXIT_CODE=0

        RULES="${{ inputs.rules }}"
        DATA="${{ inputs.data }}"

        touch guard-result.sarif

        if ! cfn-guard validate -r $RULES -d $DATA --output-format sarif  --show-summary none --structured > guard-result.sarif; then
          EXIT_CODE=1
          cat guard-result.sarif
        fi

        exit $EXIT_CODE
    - name: Upload CFN Guard SARIF report
      uses: github/codeql-action/upload-sarif@v3
      if: ${{ success() }} || ${{ failure() }}
      with:
        sarif_file: guard-result.sarif
        category: cfn-guard-validate
    - name: Annotate
      uses: equisoft-actions/sarif-annotator@v1.5.0
      if: ${{ success() }} || ${{ failure() }}
      with:
        sarif-path: guard-result.sarif
        title: CFN Guard Validate