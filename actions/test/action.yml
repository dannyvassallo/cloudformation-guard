name: 'CFN Guard Test'
description: 'Test templates using cfn-guard'
inputs:
  tests:
    description: 'Tests file or directory'
    required: true
  rules:
    description: 'Rules file or directory'
    required: true
  version:
    description: 'Guard CLI version'
    required: false
    default: '3.1.0'
runs:
  using: 'composite'
  steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Test
      id: guard
      shell: bash
      run: |
        mkdir -p ~/.guard/dl
        mkdir -p ~/.guard/bin
        VERSION=${{ inputs.version }}
        curl -L -o /tmp/guard.tar.gz https://github.com/aws-cloudformation/cloudformation-guard/releases/download/$VERSION/cfn-guard-v${VERSION:0:1}-ubuntu-latest.tar.gz
        tar -C ~/.guard/dl -xzf /tmp/guard.tar.gz
        ln -sf ~/.guard/dl/cfn-guard-v${VERSION:0:1}-ubuntu-latest/cfn-guard ~/.guard/bin && ls -l ~/.guard/bin
        export PATH="$HOME/.guard/bin:$PATH"

        EXIT_CODE=0

        TESTS="${{ inputs.tests }}"
        RULES="${{ inputs.rules }}"

        touch ~/.guard/cfn-guard-junit-result-test.xml

        if ! cfn-guard test -r $RULES -t $TESTS --output-format junit > ~/.guard/cfn-guard-junit-result-test.xml; then
          EXIT_CODE=1
          cat ~/.guard/cfn-guard-junit-result-test.xml
        fi

        exit $EXIT_CODE
    - name: Publish JUNIT Report
      uses: mikepenz/action-junit-report@v4
      if: success() || failure()
      with:
        report_paths: '~/.guard/cfn-guard-junit-result-test.xml'
        check_annotations: true
        detailed_summary: true
        annotate_notice: true
        check_name: 'CFN Guard Test Report'
